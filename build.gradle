buildscript {
    repositories {
        jcenter()
        maven { url = "http://files.minecraftforge.net/maven" }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
    }
}
apply plugin: 'net.minecraftforge.gradle.forge'

repositories {
    maven {
        url = "http://maven.cil.li/" 
    }
    maven{
        url = "https://dvs1.progwml6.com/files/maven/"
    }
}

dependencies {
    compile "li.cil.oc:OpenComputers:MC1.12.1-1.7.0.7+:api"
    //compile fileTree(dir: 'libs', include: ['*.*'])
    compile "mezz.jei:jei_1.12.2:4.10.0.199"
}

version = "4.2.7.3"
group= "lumien.randomthings"
sourceCompatibility = 1.8
targetCompatibility = 1.8

jar {
    manifest {
        attributes("FMLCorePluginContainsFMLMod": "true", "FMLCorePlugin": "lumien.randomthings.asm.LoadingPlugin", "FMLAT": "randomthings_at.cfg")
    }
}

minecraft {
    version = "1.12.2-14.23.5.2768"
    runDir = "run"
    
    // the mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   snapshot are built nightly.
    // stable_#            stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not allways work.
    // simply re-run your setup task after changing the mappings to update your workspace.
    mappings = "snapshot_20171220"
    
    replaceIn "lib/Reference.java"
    replace "@VERSION@",project.version
	replace "@FINGERPRINT@", project.findProperty("'signSHA1'")
    
    useDepAts = true
}

archivesBaseName = "RandomThings-MC" + minecraft.version

dependencies {
    // you may put jars on which you depend on in ./libs
    // or you may define them like so..
    //compile "some.group:artifact:version:classifier"
    //compile "some.group:artifact:version"
      
    // real examples
    //compile 'com.mod-buildcraft:buildcraft:6.0.8:dev'  // adds buildcraft to the dev env
    //compile 'com.googlecode.efficient-java-matrix-library:ejml:0.24' // adds ejml to the dev env

    // for more info...
    // http://www.gradle.org/docs/current/userguide/artifact_dependencies_tutorial.html
    // http://www.gradle.org/docs/current/userguide/dependency_management.html

    
}

processResources
{
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
    
    // Copy Access Transformer
    rename '(.+_at.cfg)', 'META-INF/$1'
}

task signJar(type: SignJar, dependsOn: reobfJar) {

    // Skips if the keyStore property is missing.
    onlyIf {
        project.hasProperty('keyStore')
    }

    keyStore = project.findProperty("keyStore")
    alias = project.findProperty("keyStoreAlias'")
    storePass = project.findProperty("keyStorePass")
    keyPass = project.findProperty("keyStoreKeyPass")
    inputFile = jar.archivePath
    outputFile = jar.archivePath
}

// Runs this task automatically when build is ran. 
build.dependsOn signJar
